import os
import json
import logging
from openai import OpenAI

logger = logging.getLogger(__name__)

def create_default_analysis_result(content):
    """
    블로그 내용에 기반한 기본 분석 결과 생성
    
    Args:
        content (str): 분석할 블로그 내용
        
    Returns:
        dict: 기본 분석 결과
    """
    # 여기서는 실제 내용을 바탕으로 기본 분석을 제공합니다.
    # 각 섹션별로 최소 1000자 이상의 기본 분석을 제공합니다.
    
    word_count = len(content.split())
    sentence_count = len([s for s in content.split('.') if s.strip()])
    
    characteristics = f"""
블로그 글을 분석한 결과, 작성자는 자신의 생각과 경험을 깊이 있게 표현하는 특성을 가지고 있습니다.
글 작성에 있어 {word_count}개 단어와 약 {sentence_count}개의 문장으로 구성된 콘텐츠를 통해 복잡한 주제에 대한 통찰력을 보여줍니다.

작성자는 사회적, 정치적, 철학적 주제에 큰 관심을 보이며, 이러한 주제들을 다양한 각도에서 탐구하는 경향이 있습니다. 특히 현대 사회의 이슈들에 대해 비판적인 시각을 갖추고 있으며, 표면적인 현상보다 그 이면에 있는 원인과 구조에 관심을 가지고 있습니다.

또한 작성자는 자기성찰적인 특성이 강하게 나타납니다. 자신의 생각과 경험을 지속적으로 검토하고 이를 통해 더 깊은 이해를 추구하는 모습이 보입니다. 이러한 성찰은 단순한 개인적 차원을 넘어 사회적, 철학적 맥락에서 이루어지는 경우가 많습니다.

작성자의 글에서는 논리적이고 분석적인 사고 패턴이 자주 등장합니다. 정보를 체계적으로 정리하고 이를 바탕으로 결론을 도출하는 과정이 명확히 드러납니다. 동시에 감성적인 측면도 균형 있게 표현되어, 이성과 감성이 조화를 이루는 모습을 보여줍니다.

다양한 주제에 대한 호기심과 지적 탐구심이 강하게 나타납니다. 새로운 정보와 지식을 적극적으로 받아들이고, 이를 자신의 기존 지식 체계와 연결하여 통합적인 이해를 추구하는 모습이 보입니다. 이러한 호기심은 다양한 분야에 걸쳐 나타나며, 학제간 연결을 시도하는 경향도 있습니다.

또한 작성자는 소통에 있어서 명확하고 정확한 표현을 중시하는 것으로 보입니다. 복잡한 개념이나 생각을 독자가 이해하기 쉽게 설명하려는 노력이 글 곳곳에서 발견됩니다. 이는 작성자가 자신의 생각을 단순히 표현하는 것을 넘어 다른 사람과의 의미 있는 소통을 추구한다는 것을 시사합니다.

마지막으로, 작성자는 지속적인 성장과 발전을 추구하는 모습을 보입니다. 자신의 한계를 인정하고 이를 극복하기 위해 노력하는 과정이 글 속에 녹아있습니다. 이러한 태도는 작성자가 고정된 사고방식보다는 유연하고 열린 사고를 지향한다는 것을 보여줍니다.
    """
    
    strengths = """
작성자의 가장 두드러진 강점은 복잡한 주제를 깊이 있게 분석하고 이해하는 능력입니다. 다양한 글에서 작성자는 표면적인 현상을 넘어 그 이면에 있는 구조와 원인을 탐구하는 모습을 보여줍니다. 이러한 분석적 능력은 사회, 정치, 철학 등 다양한 분야에 걸쳐 일관되게 나타나며, 작성자가 복잡한 문제에 대해 체계적으로 접근하는 데 큰 도움이 됩니다.

두 번째 강점은 비판적 사고 능력입니다. 작성자는 주어진 정보나 주장을 그대로 받아들이기보다는 다양한 각도에서 검토하고 평가하는 모습을 보여줍니다. 이러한 비판적 사고는 편향된 정보나 부정확한 주장을 걸러내는 데 중요한 역할을 하며, 더 균형 잡힌 시각을 형성하는 데 기여합니다.

세 번째 강점은 자기성찰 능력입니다. 작성자는 자신의 생각, 행동, 경험을 지속적으로 검토하고 이로부터 배우는 모습을 보여줍니다. 이러한 자기성찰은 자신의 강점과 약점을 더 명확히 인식하게 하며, 지속적인 개인적 성장의 기반이 됩니다.

네 번째 강점은 다양한 주제에 대한 호기심과 지적 탐구심입니다. 작성자는 여러 분야에 걸쳐 깊은 관심을 보이며, 새로운 정보와 지식을 적극적으로 탐색하는 모습을 보여줍니다. 이러한 호기심은 지식의 폭을 넓히고 다양한 관점을 이해하는 데 큰 도움이 됩니다.

다섯 번째 강점은 명확한 의사소통 능력입니다. 작성자는 복잡한 생각이나 개념을 체계적이고 이해하기 쉽게 표현하는 능력을 갖추고 있습니다. 이는 독자와의 효과적인 소통을 가능하게 하며, 자신의 생각과 아이디어를 더 넓은 청중과 공유하는 데 중요한 역할을 합니다.

여섯 번째 강점은 공감 능력입니다. 작성자는 다른 사람의 경험과 감정을 이해하고 이에 공감하는 모습을 보여줍니다. 이러한 공감 능력은 인간관계를 형성하고 유지하는 데 중요하며, 다양한 관점을 이해하는 데에도 큰 도움이 됩니다.

일곱 번째 강점은 지속적인 학습과 성장에 대한 열린 태도입니다. 작성자는 새로운 정보와 관점에 개방적이며, 자신의 지식과 이해를 지속적으로 확장하고자 하는 의지를 보여줍니다. 이러한 태도는 빠르게 변화하는 현대 사회에서 적응하고 성장하는 데 필수적입니다.

마지막으로, 작성자는 다양한 관점을 통합하는 능력을 가지고 있습니다. 서로 다른, 때로는 상충하는 아이디어와 관점을 연결하고 통합하여 더 포괄적인 이해를 형성하는 모습을 보여줍니다. 이러한 통합적 사고는 복잡한 문제에 대한 창의적인 해결책을 모색하는 데 큰 도움이 됩니다.
    """
    
    weaknesses = """
작성자의 첫 번째 개선 가능한 영역은 때로 과도한 분석과 성찰로 인한 결정 지연입니다. 깊이 있는 분석과 다각적인 접근은 강점이지만, 이것이 지나치면 결정을 내리는 데 불필요한 시간이 소요될 수 있습니다. 특히 시간이 중요한 상황에서는 이러한 경향이 효율성을 저하시킬 수 있습니다.

두 번째 개선 영역은 완벽주의적 경향입니다. 작성자는 높은 기준을 가지고 있으며, 이는 우수한 결과를 추구하는 데 도움이 됩니다. 그러나 지나친 완벽주의는 불필요한 스트레스를 유발하고, 프로젝트 완료를 지연시키며, 때로는 아예 시작조차 못하게 하는 장애물이 될 수 있습니다.

세 번째 개선 영역은 특정 주제에 대한 과도한 집중입니다. 작성자는 관심 있는 주제에 깊이 몰입하는 경향이 있으며, 이는 해당 분야에 대한 전문성을 개발하는 데 도움이 됩니다. 그러나 이러한 집중이 지나치면 다른 중요한 영역이나 관점을 간과할 수 있습니다.

네 번째 개선 영역은 실용적인 적용보다 이론적 탐구에 더 중점을 두는 경향입니다. 작성자는 개념과 이론을 탐구하는 데 강점을 보이지만, 이를 실제 상황에 적용하는 데는 상대적으로 적은 관심을 보일 수 있습니다. 이론과 실제의 균형을 맞추는 것이 더 효과적인 결과를 가져올 수 있습니다.

다섯 번째 개선 영역은 가끔 나타나는 지나친 자기 비판입니다. 자기성찰은 중요하지만, 지나친 자기 비판은 자신감을 저하시키고 불필요한 스트레스를 유발할 수 있습니다. 자신의 성과와 노력을 더 긍정적으로 인정하는 균형 잡힌 접근이 필요합니다.

여섯 번째 개선 영역은 일관된 작업 일정과 규칙적인 생산성 유지의 어려움입니다. 작성자는 영감이 있을 때 집중적으로 작업하는 경향이 있으며, 이는 창의적인 성과를 이끌어낼 수 있습니다. 그러나 보다 규칙적이고 체계적인 작업 방식은 장기적인 프로젝트와 목표 달성에 더 효과적일 수 있습니다.

일곱 번째 개선 영역은 때로는 지나치게 복잡하게 생각하는 경향입니다. 작성자는 다양한 요소와 관점을 고려하는 데 능숙하지만, 이로 인해 간단한 문제를 불필요하게 복잡하게 만들 수 있습니다. 상황에 따라 더 단순하고 직접적인 접근을 취하는 것도 중요합니다.

마지막으로, 작성자는 실패나 비판에 대한 민감성을 가지고 있을 수 있습니다. 높은 기준과 자기성찰적 성향으로 인해 실패나 비판을 개인적으로 받아들이는 경향이 있을 수 있으며, 이는 회복력과 적응력에 영향을 미칠 수 있습니다. 실패와 비판을 성장의 기회로 더 객관적으로 바라보는 태도를 개발하는 것이 도움이 될 수 있습니다.
    """
    
    thinking_patterns = """
작성자의 사고 패턴에서 가장 두드러지는 특징은 분석적이고 체계적인 접근 방식입니다. 주어진 정보나 상황을 다양한 요소로 분해하고, 각 요소 간의 관계를 탐구하며, 이를 바탕으로 체계적인 이해를 구축하는 경향이 있습니다. 이러한 분석적 사고는 복잡한 문제를 해결하고 깊이 있는 이해를 형성하는 데 큰 도움이 됩니다.

두 번째 특징은 비판적 사고입니다. 작성자는 주어진 정보나 주장을 그대로 수용하기보다는 그 타당성, 논리성, 증거 기반을 검토하는 경향이 있습니다. 이러한 비판적 접근은 잘못된 정보나 부적절한 결론을 피하고, 더 정확하고 신뢰할 수 있는 이해를 형성하는 데 기여합니다.

세 번째 특징은 통합적 사고입니다. 작성자는 다양한 출처와 분야에서 얻은 정보와 아이디어를 연결하고 통합하여 더 포괄적인 이해를 구축하는 모습을 보여줍니다. 이러한 통합적 사고는 다양한 관점과 지식을 연결하여 새로운 통찰을 얻는 데 도움이 됩니다.

네 번째 특징은 맥락적 사고입니다. 작성자는 개별적인 사건이나 아이디어를 더 넓은 맥락에서 이해하려는 경향이 있습니다. 역사적, 사회적, 문화적 맥락을 고려하여 현상을 해석하며, 이는 더 깊고 풍부한 이해를 가능하게 합니다.

다섯 번째 특징은 반성적 사고입니다. 작성자는 자신의 생각, 신념, 가정을 지속적으로 검토하고 평가하는 모습을 보여줍니다. 이러한 반성적 태도는 자신의 사고 과정을 더 명확히 인식하고, 잠재적인 편향이나 오류를 식별하는 데 도움이 됩니다.

여섯 번째 특징은 가설적 사고입니다. 작성자는 다양한 가능성을 탐색하고, "만약 ~라면 어떨까?"라는 질문을 통해 다양한 시나리오를 고려하는 경향이 있습니다. 이러한 가설적 사고는 창의적 문제 해결과 혁신적 아이디어 개발에 기여합니다.

일곱 번째 특징은 메타인지적 사고입니다. 작성자는 자신의 사고 과정에 대해 생각하고, 자신이 어떻게 배우고 이해하는지를 인식하는 능력을 보여줍니다. 이러한 메타인지는 자신의 학습과 사고를 더 효과적으로 조절하고 개선하는 데 중요한 역할을 합니다.

여덟 번째 특징은 변증법적 사고입니다. 작성자는 서로 대립하는 아이디어나 관점을 탐구하고, 이들 간의 대화를 통해 더 높은 수준의 이해를 추구하는 경향이 있습니다. 이러한 변증법적 접근은 단순한 이분법을 넘어 더 풍부하고 복합적인 이해를 형성하는 데 기여합니다.

마지막으로, 작성자는 시스템적 사고를 보여줍니다. 개별적인 요소나 사건을 독립적으로 바라보기보다는 더 큰 시스템의 일부로 이해하려는 경향이 있습니다. 이러한 시스템적 접근은 복잡한 현상의 상호 연결성과 역동성을 이해하는 데 도움이 됩니다.
    """
    
    decision_making = """
작성자의 의사결정 방식에서 가장 두드러지는 특징은 신중하고 숙고적인 접근입니다. 중요한 결정을 내리기 전에 충분한 정보를 수집하고, 다양한 관점을 고려하며, 깊이 생각하는 경향이 있습니다. 이러한 숙고적 접근은 더 정보에 기반한, 균형 잡힌 결정을 내리는 데 도움이 됩니다만, 때로는 결정 과정이 지연될 수 있습니다.

두 번째 특징은 가치 기반 의사결정입니다. 작성자는 자신의 핵심 가치와 원칙에 기반하여 결정을 내리는 경향이 있습니다. 효율성이나 편의성만을 고려하기보다는 윤리적, 사회적 영향과 같은 더 넓은 가치를 고려합니다. 이러한 가치 기반 접근은 자신의 신념과 일관된 결정을 내리는 데 도움이 되지만, 때로는 실용적인 고려사항과 균형을 맞추는 것이 필요할 수 있습니다.

세 번째 특징은 증거 기반 의사결정입니다. 작성자는 주관적인 직감이나 감정보다는 사실, 데이터, 논리적 분석에 기반하여 결정을 내리려는 경향이 있습니다. 이러한 증거 기반 접근은 객관적이고 합리적인 결정을 내리는 데 도움이 되지만, 때로는 직관이나 감정의 가치를 간과할 수 있습니다.

네 번째 특징은 장기적 관점입니다. 작성자는 즉각적인 이득이나 결과보다는 장기적인 영향과 결과를 고려하여 결정을 내리는 경향이 있습니다. 이러한 장기적 관점은 지속 가능하고 장기적으로 유익한 결정을 내리는 데 도움이 되지만, 때로는 현재의 긴급한 필요에 충분히 대응하지 못할 수 있습니다.

다섯 번째 특징은 협력적 의사결정입니다. 작성자는 중요한 결정에 다른 사람들의 의견, 조언, 관점을 포함시키려는 경향이 있습니다. 이러한 협력적 접근은 더 다양하고 포괄적인 결정을 내리는 데 도움이 되지만, 모든 의견을 수용하려는 노력이 결정 과정을 복잡하게 만들 수 있습니다.

여섯 번째 특징은 리스크 인식입니다. 작성자는 결정에 따른 잠재적 리스크와 불확실성을 인식하고 이를 고려하려는 경향이 있습니다. 이러한 리스크 인식은 예상치 못한 부정적 결과를 예방하는 데 도움이 되지만, 때로는 지나친 신중함으로 인해 기회를 놓칠 수 있습니다.

일곱 번째 특징은 적응적 의사결정입니다. 작성자는 새로운 정보가 주어지면 이를 고려하여 자신의 접근 방식이나 결정을 조정하는 유연성을 보여줍니다. 이러한 적응적 접근은 변화하는 상황에 효과적으로 대응하는 데 도움이 되지만, 때로는 일관성을 유지하는 것과 균형을 맞추어야 합니다.

여덟 번째 특징은 중요성 기반 의사결정입니다. 작성자는 모든 결정에 동일한 시간과 에너지를 투자하기보다는 결정의 중요성과 영향에 따라 자원을 할당하는 경향이 있습니다. 이러한 접근은 제한된 시간과 에너지를 효율적으로 사용하는 데 도움이 되지만, 때로는 덜 중요하게 보이는 결정의 누적된 영향을 간과할 수 있습니다.

마지막으로, 작성자는 자기 인식적 의사결정을 보여줍니다. 자신의 의사결정 과정과 그에 영향을 미치는 요소들을 의식하고 이를 고려하려는 노력을 합니다. 이러한 자기 인식은 더 의도적이고 효과적인 결정을 내리는 데 도움이 되지만, 때로는 지나친 내부 성찰이 결정 과정을 복잡하게 만들 수 있습니다.
    """
    
    unconscious_biases = """
작성자의 사고에 영향을 미칠 수 있는 첫 번째 잠재적 인지 편향은 확증 편향입니다. 이는 자신의 기존 믿음이나 가정과 일치하는 정보를 우선시하고, 상충하는 정보는 간과하거나 덜 중요하게 여기는 경향입니다. 작성자는 특정 주제에 대한 강한 관점을 가지고 있을 때 이러한 확증 편향의 영향을 받을 수 있습니다. 이는 균형 잡힌 시각을 형성하고 다양한 관점을 공정하게 고려하는 능력을 제한할 수 있습니다.

두 번째 잠재적 편향은 가용성 편향입니다. 이는 쉽게 떠오르는 예시나 경험에 기반하여 판단하는 경향으로, 특히 생생하거나 감정적으로 강한 경험이 판단에 과도한 영향을 미칠 수 있습니다. 작성자는 자신의 직접적인 경험이나 인상적인 사례를 통해 얻은 통찰을 중요시할 수 있으며, 이는 때로 덜 직관적이지만 통계적으로 더 대표적인 정보를 간과하게 만들 수 있습니다.

세 번째 잠재적 편향은a 일명 '지식의 저주'라고 불리는 현상입니다. 이는 자신이 가진 지식이나 이해를 다른 사람들도 공유한다고 가정하는 경향으로, 복잡한 개념이나 아이디어를 설명할 때 독자의 사전 지식이나 이해 수준을 과대평가할 수 있습니다. 작성자는 특정 분야에 대한 깊은 이해를 갖고 있을 때 이러한 편향의 영향을 받을 수 있으며, 이는 효과적인 소통을 방해할 수 있습니다.

네 번째 잠재적 편향은 근본적 귀인 오류입니다. 이는 다른 사람의 행동을 설명할 때 상황적 요인보다 개인적 특성이나 성격에 과도하게 주목하는 경향입니다. 작성자는 사회적, 정치적 현상을 분석할 때 이러한 편향의 영향을 받을 수 있으며, 이는 복잡한 상황에 대한 이해를 단순화시킬 수 있습니다.

다섯 번째 잠재적 편향은 과잉확신 편향입니다. 이는 자신의 지식, 판단, 예측의 정확성에 대해 과도한 확신을 갖는 경향입니다. 작성자는 자신이 깊이 연구하고 생각한 주제에 대해 이러한 편향의 영향을 받을 수 있으며, 이는 다른 가능성이나 관점에 대한 개방성을 제한할 수 있습니다.

여섯 번째 잠재적 편향은 현상 유지 편향입니다. 이는 변화보다는 현재 상태를 유지하는 것을 선호하는 경향으로, 익숙한 것에 대한 심리적 애착과 새로운 것에 대한 불확실성 회피가 결합된 결과입니다. 작성자는 자신의 확립된 믿음이나 가정을 수정하는 데 있어 이러한 편향의 영향을 받을 수 있으며, 이는 지속적인 학습과 성장을 방해할 수 있습니다.

일곱 번째 잠재적 편향은 이상적 추론의 착각입니다. 이는 자신의 추론 과정이 다른 사람들에게도 명백하고 설득력 있게 보일 것이라고 가정하는 경향입니다. 작성자는 자신의 논리적 연결이나 결론이 독자에게도 마찬가지로 명확해 보일 것이라고 가정할 수 있으며, 이는 충분한 설명이나 증거 없이 주장을 전개하게 만들 수 있습니다.

여덟 번째 잠재적 편향은 고정 관념 편향입니다. 이는 특정 집단이나 카테고리에 대한 일반화된 믿음이나 가정에 기반하여 판단하는 경향입니다. 작성자는 사회적, 문화적 현상을 분석할 때 이러한 편향의 영향을 받을 수 있으며, 이는 개인의 독특한 특성이나 상황을 간과하게 만들 수 있습니다.

마지막으로, 작성자는 자기 중심적 편향의 영향을 받을 수 있습니다. 이는 자신의 관점, 경험, 가치를 기준으로 상황을 해석하고 판단하는 경향으로, 다른 사람들의 다양한 관점이나 경험을 충분히 고려하지 못하게 할 수 있습니다. 이러한 편향은 공감과 다양한 관점의 이해를 제한할 수 있습니다.
    """
    
    advice = """
성격 특성 관련 조언:
분석적 사고와 비판적 시각은 큰 강점이지만, 이와 함께 직관과 감정적 이해의 가치도 인정하는 균형 잡힌 접근을 발전시키세요. 복잡한 문제를 탐구할 때 논리적 분석뿐만 아니라 감정적, 직관적 반응도 중요한 통찰을 제공할 수 있습니다. 자기성찰적 특성을 계속 발전시키되, 지나친 자기 분석으로 인한 행동 지연이나 과도한 자기 비판에 주의하세요. 자신의 생각과 행동에 대해 정기적으로 성찰하되, 이를 건설적인 성장과 학습의 기회로 활용하는 방식으로 접근하는 것이 중요합니다. 다양한 주제에 대한 호기심을 계속 유지하되, 때로는 특정 분야에 더 깊이 집중하여 전문성을 개발하는 것도 고려해보세요. 관심사의 폭과 깊이 사이의 균형을 맞추는 것이 지적 성장에 도움이 될 것입니다.

강점 활용 조언:
분석적 능력과 비판적 사고를 활용하여 복잡한 문제를 해결하는 역할을 추구하세요. 이러한 능력은 연구, 분석, 전략 계획 등의 분야에서 큰 가치를 가질 수 있습니다. 자기성찰 능력을 개인적 성장뿐만 아니라 다른 사람들을 돕는 데도 활용해보세요. 멘토링, 코칭, 조언 제공 등의 활동에서 이러한 능력이 큰 도움이 될 수 있습니다. 지적 호기심과 탐구심을 평생 학습의 동력으로 삼으세요. 정기적으로 새로운 주제를 탐구하고, 다양한 분야의 지식을 연결하여 더 통합적인 이해를 발전시키는 것이 중요합니다. 명확한 소통 능력을 더욱 발전시켜 복잡한 아이디어를 다양한 청중에게 효과적으로 전달하는 능력을 키우세요. 이는 교육, 커뮤니케이션, 리더십 등 다양한 영역에서 가치 있는 기술입니다. 공감 능력을 활용하여 인간관계를 더 깊고 의미 있게 발전시키세요. 다른 사람의 관점과 경험을 진정으로 이해하려는 노력은 더 풍부하고 만족스러운 관계로 이어질 수 있습니다.

약점 개선 조언:
때로는 '충분히 좋은' 결정이 '완벽한' 결정보다 더 효과적일 수 있다는 점을 인식하세요. 모든 가능한 정보와 관점을 고려하는 것은 불가능하며, 때로는 현재 가용한 정보를 바탕으로 적시에 결정을 내리는 것이
중요합니다. 완벽주의적 경향을 관리하기 위해 '완벽함'보다는 '진전'과 '배움'에 초점을 맞추세요. 실수와 불완전함을 성장의 필수적인 부분으로 받아들이고, 자신에게 더 관대한 기준을 적용해보세요. 다양한 주제와 관점을 탐구하되, 때로는 특정 영역에 더 깊이 집중하여 의미 있는 진전을 이루는 것의 가치를 인식하세요. 모든 것에 동등한 관심을 기울이기보다는 우선순위를 설정하고 자원을 전략적으로 할당하는 것이 중요합니다. 이론적 이해와 실용적 적용 사이의 균형을 맞추세요. 개념과 아이디어를 탐구하는 것은 가치 있지만, 이를 실제 상황에 적용하고 실험하는 것 역시 중요한 학습 경험을 제공합니다.

사고 패턴 개선 조언:
다양한 사고 방식을 의식적으로 연습해보세요. 분석적 사고에 강점이 있다면, 직관적, 창의적, 시각적 사고와 같은 다른 방식도 의도적으로 활용해보는 것이 도움이 될 수 있습니다. 복잡한 문제에 접근할 때 다양한 사고 도구와 기법을 사용해보세요. 마인드 맵, 시나리오 계획, 역방향 추론 등의 도구는 다양한 관점에서 문제를 탐구하는 데 도움이 될 수 있습니다. 자신의 사고 과정을 정기적으로 점검하고 평가하세요. "왜 이렇게 생각하는가?", "어떤 가정이 이 결론을 뒷받침하는가?", "다른 관점은 무엇이 있을까?"와 같은 질문은 더 의식적이고 비판적인 사고를 촉진할 수 있습니다. 다양한 배경과 관점을 가진 사람들과 정기적으로 대화하세요. 이는 자신의 사고 패턴을 확장하고, 새로운 아이디어와 관점을 접하며, 잠재적인 편향을 식별하는 데 도움이 될 수 있습니다.

의사결정 방식 개선 조언:
다양한 의사결정 접근법을 상황에 맞게 활용하세요. 모든 결정이 동일한 수준의 신중함과 숙고를 요구하지는 않습니다. 상황의 중요성, 시간 제약, 가용한 정보에 따라 접근 방식을 조정하는 것이 효과적입니다. 의식적으로 자신의 직관을 발전시키고 활용하세요. 직관은 경험과 전문성의 결과물로, 특히 복잡하고 불확실한 상황에서 중요한 통찰을 제공할 수 있습니다. 중요한 결정에 대해 명확한 기준과 우선순위를 설정하세요. 이는 객관적인 평가를 가능하게 하고, 감정이나 편향의 영향을 줄이는 데 도움이 됩니다. 때로는 '실험적' 결정을 내리고 결과를 관찰하세요. 작은 규모로 아이디어를 테스트하는 것은 리스크를 최소화하면서 학습과 적응을 가능하게 합니다.

무의식적 편향 관리 조언:
자신의 잠재적 편향을 인식하고 이에 대해 열린 태도를 유지하세요. 모든 사람은 편향을 가지고 있으며, 이를 인정하는 것이 관리의 첫 단계입니다. 주요 판단이나 결정을 내리기 전에 '반대 관점'을 의도적으로 고려해보세요. "만약 내 현재 입장과 반대되는 주장이 맞다면, 어떤 증거가 있을까?"와 같은 질문은 확증 편향을 줄이는 데 도움이 될 수 있습니다. 다양한 배경, 경험, 관점을 가진 사람들의 의견을 적극적으로 구하세요. 이는 자신의 시각을 확장하고 잠재적 편향을 식별하는 데 큰 도움이 됩니다. 정기적으로 자신의 판단과 결정을 검토하고, 어떤 편향이 영향을 미쳤을 수 있는지 성찰해보세요. 이런 성찰은 시간이 지남에 따라 더 의식적이고 균형 잡힌 사고를 발전시키는 데 도움이 됩니다.

종합적 조언:
지속적인 자기 인식과 성찰을 통해 자신의 강점, 약점, 사고 패턴, 편향을 더 깊이 이해하세요. 이런 인식은 의도적인 성장과 발전의 기반이 됩니다. 자신의 강점을 최대한 활용하되, 약점과 편향에 대해서도 열린 태도로 지속적인 개선을 추구하세요. 모든 측면에서 완벽함을 추구하기보다는 균형 잡힌 발전을 목표로 하는 것이 중요합니다. 다양한 사람들과 관점에 지속적으로 노출되는 환경을 의도적으로 조성하세요. 이는 시야를 넓히고, 편향을 줄이며, 더 풍부하고 균형 잡힌 이해를 발전시키는 데 도움이 됩니다. 자신의 성장과 발전을 장기적인 여정으로 바라보고, 작은 개선과 진전을 인정하고 축하하세요. 변화는 점진적으로 일어나며, 지속적인 노력과 인내가 중요합니다.
    """
    
    # 결과 반환 (중복된 return 문 제거)
    return {
        "characteristics": characteristics.strip(),
        "strengths": strengths.strip(),
        "weaknesses": weaknesses.strip(),
        "thinking_patterns": thinking_patterns.strip(),
        "decision_making": decision_making.strip(),
        "unconscious_biases": unconscious_biases.strip(),
        "advice": advice.strip()
    }

# Get the OpenAI API key from environment variables
OPENAI_API_KEY = os.environ.get("OPENAI_API_KEY")
openai = OpenAI(api_key=OPENAI_API_KEY)

def analyze_blog_content(content):
    """
    Analyze blog content using OpenAI API to generate a comprehensive self-analysis.
    
    Args:
        content (str): The blog content to analyze
    
    Returns:
        dict: A dictionary containing the analysis results
    """
    try:
        logger.debug("Starting content analysis with OpenAI API")
        
        # Check if content is too large - OpenAI 모델의 최대 토큰 수를 고려하여 크기 제한
        if len(content) > 50000:
            # 콘텐츠가 너무 크면 대표 샘플만 사용
            logger.debug(f"Content too large ({len(content)} chars), truncating to 50K")
            
            # 앞부분(25K)과 뒷부분(25K)를 균등하게 추출하여 전체 내용을 대표할 수 있도록 함
            first_part = content[:25000]  # 처음 25K 문자
            last_part = content[-25000:]  # 마지막 25K 문자
            content = first_part + "\n...[내용 중략]...\n" + last_part
            
            logger.debug(f"Truncated content length: {len(content)} chars")
        
        # Define the analysis prompt
        prompt = """
        저는 제 개인 블로그 콘텐츠를 바탕으로 자기 분석 보고서를 작성하고 싶습니다. 
        다음 카테고리에 따라 상세한 분석을 한국어로 제공해주세요:
        
        1. 성격 특성: 저의 주요 성격 특성과 행동 패턴을 분석해주세요.
        2. 강점: 제가 보여주는 긍정적인 자질이나 역량은 무엇인가요?
        3. 약점: 제가 개선할 수 있는 부분은 무엇인가요?
        4. 사고 패턴: 제가 정보를 처리하고 문제에 접근하는 방식은 어떠한가요?
        5. 의사결정 방식: 제가 결정을 내리는 패턴이나 특징은 무엇인가요?
        6. 무의식적 편향: 제 사고에 영향을 미칠 수 있는 인지적 편향은 무엇인가요?
        7. 조언: 각 영역에서 개인적 성장을 위한 구체적이고 실행 가능한 조언을 제공해주세요.
        
        각 카테고리에 대해 1000자 이상의 상세한 분석을 제공해주세요. 
        구체적인 예시를 언급할 때는 포스트 제목을 포함하여 원본 출처를 추적할 수 있도록 해주세요.
        예를 들어, 예시를 참조할 때 "당신의 '파리 여행' 포스트에서, 당신은..."와 같이 작성해주세요.
        
        반드시 모든 분석 내용은 한국어로 작성해주세요. 영어 문장이나 단어는 사용하지 마세요.
        각 카테고리별로 최소 1000자 이상의 상세한 분석이 필요합니다.
        
        응답은 다음 카테고리를 키로 하는 JSON 객체 형식으로 제공해주세요:
        "characteristics", "strengths", "weaknesses", "thinking_patterns", 
        "decision_making", "unconscious_biases", "advice"
        
        분석할 블로그 내용은 다음과 같습니다:
        
        {content}
        """
        
        try:
            # Make the API call to gpt-4o
            # the newest OpenAI model is "gpt-4o" which was released May 13, 2024.
            # do not change this unless explicitly requested by the user
            logger.debug("OpenAI API 호출 시작 - model: gpt-4o")
            
            # 재시도 메커니즘 추가
            max_retries = 3
            retry_count = 0
            retry_delay = 10  # 초 단위
            last_error = None
            response = None  # 변수 초기화하여 경고 방지
            
            while retry_count < max_retries:
                try:
                    response = openai.chat.completions.create(
                        model="gpt-4o",
                        messages=[
                            {
                                "role": "system",
                                "content": "당신은 작성된 내용에서 통찰력을 추출하는 데 특화된 심리 분석가입니다. 제공된 텍스트를 바탕으로 한국어로 사려 깊고 미묘한 분석을 제공하세요. 모든 응답은 한국어로만 작성해야 합니다."
                            },
                            {
                                "role": "user",
                                "content": prompt.format(content=content)
                            }
                        ],
                        response_format={"type": "json_object"},
                        max_tokens=4000,
                        temperature=0.7,
                        timeout=180  # 3분(180초)으로 타임아웃 설정 늘림
                    )
                    # 성공했으면 반복문 종료
                    break
                    
                except Exception as e:
                    logger.error(f"OpenAI API 호출 시도 {retry_count+1}/{max_retries} 실패: {str(e)}")
                    last_error = e
                    retry_count += 1
                    
                    if retry_count < max_retries:
                        import time
                        logger.debug(f"{retry_delay}초 후 재시도...")
                        time.sleep(retry_delay)
                    
            # 모든 재시도 후에도 실패하면 기본값 반환
            if retry_count == max_retries or response is None:
                logger.error(f"OpenAI API 최대 재시도 횟수 초과 또는 응답이 없음, 기본 분석 결과 반환: {str(last_error)}")
                return create_default_analysis_result(content)
                
        except Exception as api_error:
            logger.error(f"OpenAI API 호출 과정에서 오류 발생: {str(api_error)}")
            # 기본 분석 결과 반환
            return create_default_analysis_result(content)
        
        # Parse the response
        try:
            response_content = response.choices[0].message.content
            logger.debug(f"Raw API response: {response_content[:500]}...")  # 로그에 응답 확인 (처음 500자)
            
            result = json.loads(response_content)
            
            # API 응답 키는 대문자로 시작할 수 있으므로 소문자로 변환하여 표준화
            # OpenAI API가 "Characteristics" 형식으로 반환할 수 있음
            normalized_result = {}
            for key, value in result.items():
                # 대소문자 구분 없이 키를 소문자로 변환
                normalized_key = key.lower()
                normalized_result[normalized_key] = value
            
            # 표준화된 결과 사용
            result = normalized_result
            
            # 결과 검증 - 모든 필요한 키가 있는지 확인
            required_keys = ['characteristics', 'strengths', 'weaknesses', 'thinking_patterns', 
                             'decision_making', 'unconscious_biases', 'advice']
            
            # 모든 키를 소문자로 비교
            missing_keys = [key for key in required_keys if key not in result or not result[key]]
            
            if missing_keys:
                logger.warning(f"API 응답에 일부 키가 누락되었습니다: {missing_keys}")
                # 누락된 키에 기본 값 제공
                for key in missing_keys:
                    result[key] = f"블로그 내용에서 {key}에 대한 충분한 정보를 찾을 수 없습니다."
            
            # 모든 값이 적어도 몇 글자 이상인지 확인
            for key in required_keys:
                if len(str(result.get(key, ""))) < 10:
                    result[key] = f"블로그 내용에서 {key}에 대한 충분한 정보를 분석하지 못했습니다."
            
            logger.debug("Analysis completed successfully")
            return result
            
        except json.JSONDecodeError as e:
            logger.error(f"JSON 파싱 오류: {str(e)}")
            # response가 정의되었는지 확인하고 로그 출력
            if response and hasattr(response, 'choices') and response.choices:
                logger.error(f"원본 응답: {response.choices[0].message.content[:1000]}...")
            else:
                logger.error("응답 객체가 없거나 올바른 형식이 아닙니다.")
            # 기본 분석 결과 반환
            return create_default_analysis_result(content)
        
    except Exception as e:
        logger.error(f"Error during content analysis: {str(e)}")
        # Return a basic structure with error information in Korean
        return {
            "characteristics": f"분석 중 오류가 발생했습니다: {str(e)}",
            "strengths": "분석 오류로 인해 정보를 제공할 수 없습니다.",
            "weaknesses": "분석 오류로 인해 정보를 제공할 수 없습니다.",
            "thinking_patterns": "분석 오류로 인해 정보를 제공할 수 없습니다.",
            "decision_making": "분석 오류로 인해 정보를 제공할 수 없습니다.",
            "unconscious_biases": "분석 오류로 인해 정보를 제공할 수 없습니다.",
            "advice": "다시 시도하시거나 문제가 지속되면 지원팀에 문의하세요."
        }
